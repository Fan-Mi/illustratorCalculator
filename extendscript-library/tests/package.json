{
  "name": "grunt-extendscript",
  "description": "Execute ExtendScript (.jsx) files.",
  "version": "0.1.0",
  "homepage": "https://github.com/hanamura/grunt-extendscript",
  "author": {
    "name": "Taro Hanamura",
    "email": "m@hanamurataro.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hanamura/grunt-extendscript.git"
  },
  "bugs": {
    "url": "https://github.com/hanamura/grunt-extendscript/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/hanamura/grunt-extendscript/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "xmldoc": "git+https://github.com/nfarina/xmldoc.git",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-extendscript\n\n> Execute ExtendScript (.jsx) files.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-extendscript --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-extendscript');\n```\n\n## The \"extendscript\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `extendscript` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  extendscript: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.app\nType: `String`\nDefault value: `Adobe Photoshop CS6`\n\nApplication name.\n\n#### options.args\nType: `Array`\nDefault value: `[]`\n\nArguments passed to script.\n\n### Usage Examples\n\n```js\nvar path = require('path');\ngrunt.initConfig({\n  extendscript: {\n    options: {\n      app: 'Adobe Photoshop CS6',\n      args: [path.resolve('img')]\n    },\n    src: ['resize.jsx', 'sharpen.jsx'],\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-extendscript@0.1.0",
  "dist": {
    "shasum": "26267101344e4364ecd213664278262b1fb57fa6",
    "tarball": "http://registry.npmjs.org/grunt-extendscript/-/grunt-extendscript-0.1.0.tgz"
  },
  "_from": "grunt-extendscript@",
  "_npmVersion": "1.2.11",
  "_npmUser": {
    "name": "hanamura",
    "email": "m@hanamurataro.com"
  },
  "maintainers": [
    {
      "name": "hanamura",
      "email": "m@hanamurataro.com"
    }
  ],
  "directories": {},
  "_shasum": "26267101344e4364ecd213664278262b1fb57fa6",
  "_resolved": "https://registry.npmjs.org/grunt-extendscript/-/grunt-extendscript-0.1.0.tgz"
}
